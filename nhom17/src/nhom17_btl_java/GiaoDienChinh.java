/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nhom17_btl_java;

import Object.Connect;
import Object.doanhthu;
import Object.khachhang;

import java.sql.Connection;

import java.sql.DriverManager;
import java.sql.ResultSet;

import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
//import net.sf.jasperreports.engine.JRException;
//import net.sf.jasperreports.engine.JasperCompileManager;
//import net.sf.jasperreports.engine.JasperFillManager;
//import net.sf.jasperreports.engine.JasperPrint;
//import net.sf.jasperreports.engine.JasperReport;
//import net.sf.jasperreports.engine.util.JRStyledText.Run;
//import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Administrator
 */
public class GiaoDienChinh extends javax.swing.JFrame {

    /**
     * Creates new form GiaoDienChinh
     */
    static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://localhost:3306/nhom17";
    static final String USER = "root";
    static final String PASS = "";

    DefaultTableModel tableModelhd;
    DefaultTableModel tableModelcthd;
    DefaultTableModel tableModelphieuthu;
    DefaultTableModel tableModelphieuchi;
    DefaultTableModel tableModelSP;
    DefaultTableModel tableModelHangTon;

    public GiaoDienChinh() {
        initComponents();
        setLocation(320, 30);
        setResizable(false);
        tableModelhd = (DefaultTableModel) tbhoadon.getModel();
        tableModelcthd = (DefaultTableModel) tbcthd.getModel();
        tableModelphieuchi = (DefaultTableModel) tbphieuchi.getModel();
        tableModelphieuthu = (DefaultTableModel) tbphieuthu.getModel();
        tableModelSP = (DefaultTableModel) jtbSanPham.getModel();
        tableModelHangTon = (DefaultTableModel) jtbHangTon.getModel();

        //hiển thị hóa đơn
        hienthihoadon();

        //hiển thị phiếu thu và chi
        hienthiphieuchi();
        hienthiphieuthu();

        //hiển thị khách hàng
        HienThi();
        //hiển thị doanh thu
        HienThiDT();

        // load danh sach san pham
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            System.out.println("da ket noi den CSDL");
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            System.out.println("tao cau lenh truy van sql...");
            stmt = con.createStatement();
            String sql = "select*from sanpham";

            int sohang = tableModelSP.getRowCount() - 1;
            for (int i = sohang; i >= 0; i--) {
                tableModelSP.removeRow(i);
            }

            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                String[] rows = new String[6];
                rows[0] = rs.getString(1);
                rows[1] = rs.getString(2);
                rows[2] = rs.getString(3);
                rows[3] = rs.getString(4);
                rows[4] = rs.getString(5);
                rows[5] = rs.getString(6);
                tableModelSP.addRow(rows);
                tableModelHangTon.addRow(rows);
            }

            con.close();
            stmt.close();
            rs.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        buttonGroupphieuthu = new javax.swing.ButtonGroup();
        buttonGroupphieuchi = new javax.swing.ButtonGroup();
        groupgioitinh = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        txtTenSP = new javax.swing.JTextField();
        txtLoai = new javax.swing.JTextField();
        txtXuatXu = new javax.swing.JTextField();
        txtSL = new javax.swing.JTextField();
        txtDonGia = new javax.swing.JTextField();
        btnNhapSP = new javax.swing.JButton();
        btnBanSP = new javax.swing.JButton();
        btnTimSP = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jtbSanPham = new javax.swing.JTable();
        btnThemSP = new javax.swing.JButton();
        btnSuaSP = new javax.swing.JButton();
        btnXoaSP = new javax.swing.JButton();
        jLabel54 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        txtMaHDSP = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        txtMaGD = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        txtMaSP_HangTon = new javax.swing.JTextField();
        btnKiemTra = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        jtbHangTon = new javax.swing.JTable();
        btnHienThiHangTon = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtmahdct = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        txtmasp = new javax.swing.JTextField();
        txttensp = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtsoluong = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtdongia = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnxoasp = new javax.swing.JButton();
        btnsuasp = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbcthd = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        lbtongtien = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtmahd = new javax.swing.JTextField();
        txtngaylap = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtmanv = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txttennv = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        txtghichu = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        txtmakh = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txttenkh = new javax.swing.JTextField();
        btnthemhd = new javax.swing.JButton();
        btnxoahd = new javax.swing.JButton();
        btninhd = new javax.swing.JButton();
        btnsuahd = new javax.swing.JButton();
        btntimhd = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        txttungay = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        txtdenngay = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        btnhienthi = new javax.swing.JButton();
        btnTKtheongay = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbhoadon = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbphieuthu = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        btnhienthiphieuthu = new javax.swing.JButton();
        lbtongthu = new javax.swing.JLabel();
        btntimkiemphieuthu = new javax.swing.JButton();
        rbsopxthu = new javax.swing.JRadioButton();
        rbmaspthu = new javax.swing.JRadioButton();
        rbngayxuatthu = new javax.swing.JRadioButton();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        txtsopxthu = new javax.swing.JTextField();
        txtmaspthu = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        txttungayxuatthu = new javax.swing.JTextField();
        txtdenngayxuatthu = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbphieuchi = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnhienthiphieuchi = new javax.swing.JButton();
        lbtongchi = new javax.swing.JLabel();
        btntimkiemphieuchi = new javax.swing.JButton();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        txtsopnchi = new javax.swing.JTextField();
        txtmaspchi = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        txttungaynhapchi = new javax.swing.JTextField();
        txtdenngaynhapchi = new javax.swing.JTextField();
        rbsopnchi = new javax.swing.JRadioButton();
        rbmaspchi = new javax.swing.JRadioButton();
        rbngaynhapchi = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbdoanhthu = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lbtongsokhachN = new javax.swing.JLabel();
        lbtonghoadonN = new javax.swing.JLabel();
        lbdoanhthuN = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtmakhN = new javax.swing.JTextField();
        txthotenN = new javax.swing.JTextField();
        txtngaysinhN = new javax.swing.JTextField();
        txtdiachiN = new javax.swing.JTextField();
        txtsdtN = new javax.swing.JTextField();
        txtghichuN = new javax.swing.JTextField();
        radionamN = new javax.swing.JRadioButton();
        radionuN = new javax.swing.JRadioButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbkhachhang = new javax.swing.JTable();
        btnthemN = new javax.swing.JButton();
        btnsuaN = new javax.swing.JButton();
        btntimkiemN = new javax.swing.JButton();
        btnhienthiN = new javax.swing.JButton();
        combotimN = new javax.swing.JComboBox();
        txttimkiemN = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        btndangxuat = new javax.swing.JButton();
        lbnhanvien = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel8.setText("jLabel8");

        jTextField13.setText("jTextField13");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane1.setBackground(new java.awt.Color(153, 255, 153));

        jLabel30.setText("Mã sp");

        jLabel31.setText("tên sp");

        jLabel32.setText("Loại");

        jLabel33.setText("xuất xứ");

        jLabel34.setText("số lượng");

        jLabel35.setText("đơn giá");

        btnNhapSP.setBackground(new java.awt.Color(204, 204, 204));
        btnNhapSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/nhapsp.png"))); // NOI18N
        btnNhapSP.setText("Nhập");
        btnNhapSP.setOpaque(false);
        btnNhapSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapSPActionPerformed(evt);
            }
        });

        btnBanSP.setBackground(new java.awt.Color(204, 204, 204));
        btnBanSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/bansp.png"))); // NOI18N
        btnBanSP.setText("Bán");
        btnBanSP.setOpaque(false);
        btnBanSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBanSPActionPerformed(evt);
            }
        });

        btnTimSP.setBackground(new java.awt.Color(204, 204, 204));
        btnTimSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search.png"))); // NOI18N
        btnTimSP.setText("Tìm Kiếm");
        btnTimSP.setOpaque(false);
        btnTimSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimSPActionPerformed(evt);
            }
        });

        jtbSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sp", "Tên sp", "Loại", "Xuất xứ", "Số lượng", "Đơn giá"
            }
        ));
        jtbSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbSanPhamMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jtbSanPham);

        btnThemSP.setBackground(new java.awt.Color(204, 204, 204));
        btnThemSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnThemSP.setText("Thêm sp");
        btnThemSP.setOpaque(false);
        btnThemSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPActionPerformed(evt);
            }
        });

        btnSuaSP.setBackground(new java.awt.Color(204, 204, 204));
        btnSuaSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/sua.png"))); // NOI18N
        btnSuaSP.setText("Sửa sp");
        btnSuaSP.setOpaque(false);
        btnSuaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaSPActionPerformed(evt);
            }
        });

        btnXoaSP.setBackground(new java.awt.Color(204, 204, 204));
        btnXoaSP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete.png"))); // NOI18N
        btnXoaSP.setText("Xóa sp");
        btnXoaSP.setOpaque(false);
        btnXoaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSPActionPerformed(evt);
            }
        });

        jLabel54.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(255, 0, 0));
        jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel54.setText("Sản Phẩm");

        jLabel57.setText("Mã HD");

        jLabel58.setText("Mã GD");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 297, Short.MAX_VALUE)
                        .addComponent(btnNhapSP, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(308, 308, 308)
                        .addComponent(btnBanSP, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(226, 226, 226))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(142, 142, 142)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel32)
                                    .addComponent(jLabel31)
                                    .addComponent(jLabel57))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(83, 83, 83)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel34)
                                            .addComponent(jLabel33)
                                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel58)))
                                    .addComponent(txtMaHDSP, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtXuatXu, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                    .addComponent(txtSL, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                    .addComponent(txtDonGia, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                                    .addComponent(txtMaGD)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTimSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoaSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThemSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSuaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(254, 254, 254))
            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtXuatXu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel33)
                        .addComponent(btnThemSP))
                    .addComponent(jLabel30))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel32)
                                        .addComponent(txtLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel35)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel31)
                                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel34)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(btnSuaSP)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(btnXoaSP)
                                .addGap(32, 32, 32)
                                .addComponent(btnTimSP))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnNhapSP, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnBanSP))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel57)
                        .addGap(88, 88, 88)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMaHDSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel58)
                        .addComponent(txtMaGD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(187, 187, 187))
        );

        jTabbedPane1.addTab("Quản lí sản phẩm", jPanel2);

        jLabel36.setText("Mã sp");

        btnKiemTra.setBackground(new java.awt.Color(204, 204, 204));
        btnKiemTra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search.png"))); // NOI18N
        btnKiemTra.setText("kiểm tra");
        btnKiemTra.setOpaque(false);
        btnKiemTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKiemTraActionPerformed(evt);
            }
        });

        jtbHangTon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sp", "Tên sp", "Loại ", "Xuất xứ", "Số lượng", "Đơn giá"
            }
        ));
        jtbHangTon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbHangTonMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(jtbHangTon);

        btnHienThiHangTon.setBackground(new java.awt.Color(204, 204, 204));
        btnHienThiHangTon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/display.png"))); // NOI18N
        btnHienThiHangTon.setText("Hiển thị");
        btnHienThiHangTon.setOpaque(false);
        btnHienThiHangTon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienThiHangTonActionPerformed(evt);
            }
        });

        jLabel55.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(255, 0, 0));
        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel55.setText("Hàng Tồn");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(txtMaSP_HangTon, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(btnKiemTra)
                        .addGap(123, 123, 123)
                        .addComponent(btnHienThiHangTon, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(375, 375, 375)
                        .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 1320, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel55)
                .addGap(52, 52, 52)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaSP_HangTon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKiemTra, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHienThiHangTon, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(311, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lí hàng tồn", jPanel5);

        jPanel8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 0, 51));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Chi Tiết Hóa Đơn");

        jLabel29.setText("Ma HD");

        jLabel41.setText("Ma SP");

        jLabel10.setText("Ten sp");

        jLabel17.setText("Số Lượng");

        jLabel11.setText("Đơn Gia");

        btnxoasp.setBackground(new java.awt.Color(204, 204, 204));
        btnxoasp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete.png"))); // NOI18N
        btnxoasp.setText("xoa sp");
        btnxoasp.setOpaque(false);
        btnxoasp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaspActionPerformed(evt);
            }
        });

        btnsuasp.setBackground(new java.awt.Color(204, 204, 204));
        btnsuasp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/sua.png"))); // NOI18N
        btnsuasp.setText("Sua sp");
        btnsuasp.setOpaque(false);
        btnsuasp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaspActionPerformed(evt);
            }
        });

        jLabel19.setForeground(new java.awt.Color(255, 51, 0));
        jLabel19.setText("Danh sách chi tiết hóa đơn:");

        tbcthd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MaHD", "MaSP", "TenSP", "SoLuong", "DonGia"
            }
        ));
        tbcthd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbcthdMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbcthd);

        jLabel20.setText("Tổng Tiền:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbtongtien, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addGap(44, 44, 44)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnxoasp)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                            .addComponent(btnsuasp))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                            .addGap(75, 75, 75)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(79, 79, 79)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtdongia, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                .addComponent(txtsoluong)
                                .addComponent(txtmahdct)
                                .addComponent(txtmasp)
                                .addComponent(txttensp))))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtmahdct))
                .addGap(24, 24, 24)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtmasp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttensp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsoluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtdongia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                        .addGap(3, 3, 3)))
                .addGap(48, 48, 48)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnxoasp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsuasp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83)
                .addComponent(jLabel19)
                .addGap(59, 59, 59)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbtongtien, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jPanel9.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel12.setText("Ma HD");

        jLabel13.setText("Ngay Lap");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Hóa Đơn");

        jLabel42.setText("MaNV");

        jLabel14.setText("Ten NV");

        jLabel40.setText("GhiChu");

        jLabel43.setText("MaKH");

        jLabel15.setText("Ten KH");

        btnthemhd.setBackground(new java.awt.Color(204, 204, 204));
        btnthemhd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnthemhd.setText("Them HD");
        btnthemhd.setOpaque(false);
        btnthemhd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemhdActionPerformed(evt);
            }
        });

        btnxoahd.setBackground(new java.awt.Color(204, 204, 204));
        btnxoahd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete.png"))); // NOI18N
        btnxoahd.setText("Xoa HD");
        btnxoahd.setOpaque(false);
        btnxoahd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoahdActionPerformed(evt);
            }
        });

        btninhd.setBackground(new java.awt.Color(204, 204, 204));
        btninhd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/print-icon.png"))); // NOI18N
        btninhd.setText("In HD");
        btninhd.setOpaque(false);
        btninhd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninhdActionPerformed(evt);
            }
        });

        btnsuahd.setBackground(new java.awt.Color(204, 204, 204));
        btnsuahd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/sua.png"))); // NOI18N
        btnsuahd.setText("Sua HD");
        btnsuahd.setOpaque(false);
        btnsuahd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuahdActionPerformed(evt);
            }
        });

        btntimhd.setBackground(new java.awt.Color(204, 204, 204));
        btntimhd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search.png"))); // NOI18N
        btntimhd.setText("Tim HD");
        btntimhd.setOpaque(false);
        btntimhd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimhdActionPerformed(evt);
            }
        });

        jLabel37.setText("Tìm hóa đơn theo ngày:");

        jLabel38.setText("Từ ngày:");

        jLabel39.setText("Đến ngày:");

        jLabel28.setForeground(new java.awt.Color(255, 0, 0));
        jLabel28.setText("Danh sách hóa đơn:");

        btnhienthi.setBackground(new java.awt.Color(204, 204, 204));
        btnhienthi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/display.png"))); // NOI18N
        btnhienthi.setText("Hien Thi");
        btnhienthi.setOpaque(false);
        btnhienthi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhienthiActionPerformed(evt);
            }
        });

        btnTKtheongay.setBackground(new java.awt.Color(204, 204, 204));
        btnTKtheongay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search.png"))); // NOI18N
        btnTKtheongay.setText("Tìm Kiếm");
        btnTKtheongay.setOpaque(false);
        btnTKtheongay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTKtheongayActionPerformed(evt);
            }
        });

        tbhoadon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MaHD", "NgayLap", "TenNV", "TenKH", "GhiChu", "MaKH", "MaNV"
            }
        ));
        tbhoadon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbhoadonMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tbhoadon);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtdenngay, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(txttungay))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap(139, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnthemhd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnhienthi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(108, 108, 108)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnxoahd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btntimhd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(127, 127, 127)))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnsuahd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btninhd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTKtheongay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(149, 149, 149))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jScrollPane5)
                        .addContainerGap())
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61)
                                .addComponent(txtmahd, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtngaylap, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                                    .addComponent(txtmanv)
                                    .addComponent(txttennv))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txttenkh, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(txtmakh)
                            .addComponent(txtghichu))
                        .addGap(102, 102, 102))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel43, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(21, 21, 21))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addComponent(txtmahd)
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtghichu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtngaylap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtmakh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txttenkh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtmanv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42))
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnxoahd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel9Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(txttennv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                            .addGap(56, 56, 56)
                                            .addComponent(btnhienthi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnthemhd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(btntimhd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(btnsuahd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btninhd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel38)
                                    .addComponent(txttungay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTKtheongay, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11))))
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtdenngay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel39)))
                .addGap(12, 12, 12)
                .addComponent(jLabel28)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Quản lí hóa đơn", jPanel1);

        jPanel10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Phiếu thu");

        tbphieuthu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số PX", "Mã SP", "Tên SP", "Loại", "Xuất Xứ", "Số lượng", "Đơn giá", "Ngày xuất"
            }
        ));
        jScrollPane2.setViewportView(tbphieuthu);

        jLabel5.setText("Tổng tiền thu");

        btnhienthiphieuthu.setBackground(new java.awt.Color(204, 204, 204));
        btnhienthiphieuthu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/display.png"))); // NOI18N
        btnhienthiphieuthu.setText("Hiển thị");
        btnhienthiphieuthu.setOpaque(false);
        btnhienthiphieuthu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhienthiphieuthuActionPerformed(evt);
            }
        });

        btntimkiemphieuthu.setBackground(new java.awt.Color(204, 204, 204));
        btntimkiemphieuthu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search.png"))); // NOI18N
        btntimkiemphieuthu.setText("Tìm kiếm");
        btntimkiemphieuthu.setOpaque(false);
        btntimkiemphieuthu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemphieuthuActionPerformed(evt);
            }
        });

        buttonGroupphieuthu.add(rbsopxthu);
        rbsopxthu.setText("Theo Số px");

        buttonGroupphieuthu.add(rbmaspthu);
        rbmaspthu.setText("Theo Mã SP");

        buttonGroupphieuthu.add(rbngayxuatthu);
        rbngayxuatthu.setText("Theo Ngày xuất");

        jLabel46.setText("Số PX");

        jLabel47.setText("Mã SP");

        jLabel48.setText("Từ Ngày xuất");

        jLabel49.setText("Đến Ngày xuất");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 126, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel47, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                            .addComponent(jLabel46, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtsopxthu, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                            .addComponent(txtmaspthu))
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rbsopxthu)
                                .addGap(130, 130, 130))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel10Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel49)
                                        .addGap(38, 38, 38)
                                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtdenngayxuatthu, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                                            .addComponent(txttungayxuatthu))
                                        .addGap(88, 88, 88)))
                                .addComponent(btnhienthiphieuthu, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(btntimkiemphieuthu, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbmaspthu)
                                    .addComponent(rbngayxuatthu))
                                .addGap(106, 106, 106))))))
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(448, 448, 448)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(lbtongthu, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(251, 251, 251))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txttungayxuatthu)
                            .addComponent(txtsopxthu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel46)
                            .addComponent(jLabel48))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel47)
                            .addComponent(txtmaspthu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel49)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(rbmaspthu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtdenngayxuatthu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbngayxuatthu)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap(46, Short.MAX_VALUE)
                        .addComponent(rbsopxthu)
                        .addGap(14, 14, 14)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnhienthiphieuthu)
                            .addComponent(btntimkiemphieuthu, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(lbtongthu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tbphieuchi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số PN", "Mã SP", "Tên SP", "Loại", "Xuất xứ", "Số lượng", "Đơn giá", "Ngày nhập"
            }
        ));
        jScrollPane3.setViewportView(tbphieuchi);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Phiếu Chi");

        jLabel7.setText("Tổng tiền chi");

        btnhienthiphieuchi.setBackground(new java.awt.Color(204, 204, 204));
        btnhienthiphieuchi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/display.png"))); // NOI18N
        btnhienthiphieuchi.setText("Hiển thị");
        btnhienthiphieuchi.setOpaque(false);
        btnhienthiphieuchi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhienthiphieuchiActionPerformed(evt);
            }
        });

        btntimkiemphieuchi.setBackground(new java.awt.Color(204, 204, 204));
        btntimkiemphieuchi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search.png"))); // NOI18N
        btntimkiemphieuchi.setText("Tìm kiếm");
        btntimkiemphieuchi.setOpaque(false);
        btntimkiemphieuchi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemphieuchiActionPerformed(evt);
            }
        });

        jLabel50.setText("Số PN");

        jLabel51.setText("Mã SP");

        jLabel52.setText("Từ Ngày Nhập");

        jLabel53.setText("Đến Ngày Nhập");

        buttonGroupphieuchi.add(rbsopnchi);
        rbsopnchi.setText("Theo Số PN");

        buttonGroupphieuchi.add(rbmaspchi);
        rbmaspchi.setText("Theo Mã SP");

        buttonGroupphieuchi.add(rbngaynhapchi);
        rbngaynhapchi.setText("Theo Ngày Nhập");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtmaspchi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtsopnchi, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txttungaynhapchi, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtdenngaynhapchi, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lbtongchi, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(btnhienthiphieuchi, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(btntimkiemphieuchi)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbsopnchi)
                                    .addComponent(rbmaspchi)
                                    .addComponent(rbngaynhapchi))))
                        .addGap(127, 127, 127))))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(438, 438, 438)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel50)
                            .addComponent(txtsopnchi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel52)
                            .addComponent(txttungaynhapchi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel51)
                            .addComponent(txtmaspchi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel53)
                            .addComponent(txtdenngaynhapchi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(rbsopnchi)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbmaspchi)
                            .addComponent(btntimkiemphieuchi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnhienthiphieuchi, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(rbngaynhapchi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbtongchi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(58, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Quản lí chi tiêu", jPanel7);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Doanh Thu Bán Hàng");

        tbdoanhthu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã Hàng", "Tên Hàng", "Số Lượng", "Đơn Giá", "Tên Khách Hàng", "Ghi Chú", "Mã Hóa Đơn"
            }
        ));
        jScrollPane1.setViewportView(tbdoanhthu);

        jLabel2.setText("Tổng Số Khách");

        jLabel3.setText("Doanh Thu");

        jLabel9.setText("Tổng Hóa Đơn");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(415, 415, 415)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbtongsokhachN, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel9)
                        .addGap(43, 43, 43)
                        .addComponent(lbtonghoadonN, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 570, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(lbdoanhthuN, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(78, 78, 78))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbtongsokhachN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbtonghoadonN, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbdoanhthuN, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(85, 85, 85))
        );

        jTabbedPane1.addTab("Quản lí doanh thu", jPanel4);

        jLabel21.setText("Mã Khách Hàng");

        jLabel22.setText("Họ Tên");

        jLabel23.setText("Ngày Sinh");

        jLabel24.setText("Địa Chỉ");

        jLabel25.setText("Số Điện Thoại");

        jLabel26.setText("Giới Tính");

        jLabel27.setText("Ghi chú");

        txtdiachiN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdiachiNActionPerformed(evt);
            }
        });

        groupgioitinh.add(radionamN);
        radionamN.setText("Nam");

        groupgioitinh.add(radionuN);
        radionuN.setText("Nữ");

        tbkhachhang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã Khách Hàng", "Họ Tên", "Ngày Sinh", "Địa Chỉ", "Số Điện Thoại", "Giới Tính", "Ghi chú"
            }
        ));
        tbkhachhang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbkhachhangMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tbkhachhang);

        btnthemN.setBackground(new java.awt.Color(204, 204, 204));
        btnthemN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnthemN.setText("Thêm");
        btnthemN.setOpaque(false);
        btnthemN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemNActionPerformed(evt);
            }
        });

        btnsuaN.setBackground(new java.awt.Color(204, 204, 204));
        btnsuaN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/sua.png"))); // NOI18N
        btnsuaN.setText("Sửa");
        btnsuaN.setOpaque(false);
        btnsuaN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaNActionPerformed(evt);
            }
        });

        btntimkiemN.setBackground(new java.awt.Color(204, 204, 204));
        btntimkiemN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search.png"))); // NOI18N
        btntimkiemN.setText("Tìm Kiếm");
        btntimkiemN.setOpaque(false);
        btntimkiemN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemNActionPerformed(evt);
            }
        });

        btnhienthiN.setBackground(new java.awt.Color(204, 204, 204));
        btnhienthiN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/display.png"))); // NOI18N
        btnhienthiN.setText("Hiển thị");
        btnhienthiN.setOpaque(false);
        btnhienthiN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnhienthiNActionPerformed(evt);
            }
        });

        combotimN.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tìm theo tên", "Tìm theo mã" }));

        jLabel56.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(255, 0, 0));
        jLabel56.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel56.setText("Khách Hàng");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                                .addComponent(radionamN, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(radionuN, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel21)
                                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(19, 19, 19)))
                                .addGap(54, 54, 54)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtngaysinhN, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                                    .addComponent(txthotenN)
                                    .addComponent(txtmakhN)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(btnhienthiN)
                        .addGap(76, 76, 76)
                        .addComponent(btnthemN, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(btnsuaN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btntimkiemN)
                        .addGap(574, 574, 574))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combotimN, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtdiachiN)
                            .addComponent(txtsdtN)
                            .addComponent(txtghichuN)
                            .addComponent(txttimkiemN, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(253, 253, 253))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(383, 383, 383)
                        .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel56)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmakhN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txthotenN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtngaysinhN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radionamN)
                            .addComponent(radionuN))
                        .addGap(34, 34, 34))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtdiachiN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtsdtN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtghichuN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combotimN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txttimkiemN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnthemN, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsuaN, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btntimkiemN, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnhienthiN))
                .addGap(66, 66, 66)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
        );

        jTabbedPane1.addTab("Quản lí khách hàng", jPanel3);

        btndangxuat.setBackground(new java.awt.Color(51, 255, 255));
        btndangxuat.setForeground(new java.awt.Color(255, 0, 51));
        btndangxuat.setText("Đăng Xuất");
        btndangxuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndangxuatActionPerformed(evt);
            }
        });

        lbnhanvien.setForeground(new java.awt.Color(255, 0, 0));

        jLabel44.setForeground(new java.awt.Color(255, 0, 51));
        jLabel44.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/nhanvien.png"))); // NOI18N
        jLabel44.setText("Tên nhân viên:");

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(102, 0, 102));
        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel45.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/lyruou.png"))); // NOI18N
        jLabel45.setText("Quản Lí Bán Rượu Vang Đà Lạt");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(153, 153, 153)
                .addComponent(jLabel44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbnhanvien, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btndangxuat)
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lbnhanvien))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btndangxuat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(15, 15, 15))
                    .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //=============================Quản lý hóa đơn=======================
    public void setTenNv(String tennv, String manv) {
        lbnhanvien.setText(tennv);
        txtmanv.setText(manv);
        txttennv.setText(tennv);
    }

    private void XoaTextfield() {
        txtmahd.setText(null);
        txtngaylap.setText(null);
        txttenkh.setText(null);
        txttennv.setText(null);
        txtghichu.setText(null);
        txtmakh.setText(null);
        txtmanv.setText(null);
    }

    private void btnTKtheongayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTKtheongayActionPerformed
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();

            int sohang = tableModelhd.getRowCount() - 1;
            for (int i = sohang; i >= 0; i--) {
                tableModelhd.removeRow(i);
            }

            if (txttungay.getText().equals("") || txtdenngay.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Bạn cần điền đủ ngày vào 2 ô để tìm kiếm!!!");
                return;
            } else {
                Date datetungay = new SimpleDateFormat("yyyy-MM-dd").parse(txttungay.getText());

                Date datedenngay = new SimpleDateFormat("yyyy-MM-dd").parse(txtdenngay.getText());

                String sqlktra = "select* from hoadon";
                ResultSet rsktra = stmt.executeQuery(sqlktra);
                while (rsktra.next()) {
                    Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse(rsktra.getString(2));

                    if (date1.compareTo(datetungay) >= 0 && date1.compareTo(datedenngay) <= 0) {
                        String sqltk = "select* from hoadon where NgayLap between '" + txttungay.getText() + "'and'" + txtdenngay.getText() + "'";
                        ResultSet rs = stmt.executeQuery(sqltk);
                        while (rs.next()) {
                            String[] colums = new String[7];
                            colums[0] = rs.getString(1);
                            colums[1] = rs.getString(2);
                            colums[2] = rs.getString(3);
                            colums[3] = rs.getString(4);
                            colums[4] = rs.getString(5);
                            colums[5] = rs.getString(6);
                            colums[6] = rs.getString(7);
                            tableModelhd.addRow(colums);
                        }
                        return;
                    }
                }
                JOptionPane.showMessageDialog(rootPane, "không có hóa đơn nào trong khoảng ngày này!!!");
                txttungay.setText(null);
                txtdenngay.setText(null);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTKtheongayActionPerformed

    private void btnsuaspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaspActionPerformed
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();

            if (txtmahdct.getText().equals("") || txtmasp.getText().equals("") || txttensp.getText().equals("") || txtsoluong.getText().equals("") || txtdongia.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Bạn cần nhập đầy đủ các ô để sửa!!!");
                return;
            } else {
                int slsua = Integer.parseInt(txtsoluong.getText());
                int slco = 0;
                String sqlcthd = "select* from chitiethd";
                ResultSet rscthd = stmt.executeQuery(sqlcthd);
                while (rscthd.next()) {
                    slco = Integer.parseInt(rscthd.getString(4));
                }

                String sqlsp = "select* from sanpham";
                ResultSet rssp = stmt.executeQuery(sqlsp);
                int slsp = 0;
                while (rssp.next()) {
                    if (txtmasp.getText().equals(rssp.getString(1))) {
                        slsp = Integer.parseInt(rssp.getString(5));
                    }

                }

                if (slco > slsua) {
                    int slmoi = slsp + (slco - slsua);

                    String sqlsuasp = "update sanpham set SoLuong='" + slmoi + "' where MaSP='" + txtmasp.getText() + "'";
                    int ktrasp = stmt.executeUpdate(sqlsuasp);
                    if (ktrasp == 0) {
                        System.out.println("update bang sanpham false");
                    } else {
                        System.out.println("update bang sanpham sucessfully");
                    }

                    String sqlsua = "update chitiethd set MaHD='" + txtmahdct.getText() + "',MaSP='" + txtmasp.getText() + "',TenSP='" + txttensp.getText() + "',SoLuong='"
                            + Integer.parseInt(txtsoluong.getText()) + "',DonGia='" + Integer.parseInt(txtdongia.getText()) + "'where MaHD='" + txtmahdct.getText() + "'and MaSP='" + txtmasp.getText() + "'";
                    int ktra = stmt.executeUpdate(sqlsua);

                    if (ktra == 0) {
                        System.out.println("update false");
                    } else {
                        System.out.println("update seccusfully");
                    }

                    int sohang = tableModelcthd.getRowCount() - 1;
                    for (int i = sohang; i >= 0; i--) {
                        tableModelcthd.removeRow(i);
                    }

                    String sql = "select* from chitiethd";
                    ResultSet rs = stmt.executeQuery(sql);
                    while (rs.next()) {
                        String[] rows = new String[5];
                        rows[0] = rs.getString(1);
                        rows[1] = rs.getString(2);
                        rows[2] = rs.getString(3);
                        rows[3] = rs.getString(4);
                        rows[4] = rs.getString(5);
                        tableModelcthd.addRow(rows);
                    }
                    JOptionPane.showMessageDialog(rootPane, "sửa thành công!!!");
                    return;
                } else if (slco < slsua) {
                    int slmoisua = slsp - (slsua - slco);
                    String sqlsuasp = "update sanpham set SoLuong='" + slmoisua + "' where MaSP='" + txtmasp.getText() + "'";
                    int ktrasp = stmt.executeUpdate(sqlsuasp);
                    if (ktrasp == 0) {
                        System.out.println("update bang sanpham false");
                    } else {
                        System.out.println("update bang sanpham sucessfully");
                    }
                    String sqlsua = "update chitiethd set MaHD='" + txtmahdct.getText() + "',MaSP='" + txtmasp.getText() + "',TenSP='" + txttensp.getText() + "',SoLuong='"
                            + Integer.parseInt(txtsoluong.getText()) + "',DonGia='" + Integer.parseInt(txtdongia.getText()) + "'where MaHD='" + txtmahdct.getText() + "'and MaSP='" + txtmasp.getText() + "'";
                    int ktra = stmt.executeUpdate(sqlsua);

                    if (ktra == 0) {
                        System.out.println("update false");
                    } else {
                        System.out.println("update seccusfully");
                    }

                    int sohang = tableModelcthd.getRowCount() - 1;
                    for (int i = sohang; i >= 0; i--) {
                        tableModelcthd.removeRow(i);
                    }

                    String sql = "select* from chitiethd";
                    ResultSet rs = stmt.executeQuery(sql);
                    while (rs.next()) {
                        String[] rows = new String[5];
                        rows[0] = rs.getString(1);
                        rows[1] = rs.getString(2);
                        rows[2] = rs.getString(3);
                        rows[3] = rs.getString(4);
                        rows[4] = rs.getString(5);
                        tableModelcthd.addRow(rows);
                    }
                    JOptionPane.showMessageDialog(rootPane, "sửa thành công!!!");
                    return;
                }
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnsuaspActionPerformed

    private void btnhienthiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhienthiActionPerformed
        hienthihoadon();
    }//GEN-LAST:event_btnhienthiActionPerformed
    private void hienthihoadon() {
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            System.out.println("da ket noi den CSDL");
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            System.out.println("tao cau lenh truy van sql...");
            stmt = con.createStatement();
            String sql = "select*from hoadon";

            int sohang = tableModelhd.getRowCount() - 1;
            for (int i = sohang; i >= 0; i--) {
                tableModelhd.removeRow(i);
            }

            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                String[] rows = new String[7];
                rows[0] = rs.getString(1);
                rows[1] = rs.getString(2);
                rows[2] = rs.getString(3);
                rows[3] = rs.getString(4);
                rows[4] = rs.getString(5);
                rows[5] = rs.getString(6);
                rows[6] = rs.getString(7);
                tableModelhd.addRow(rows);
            }

            con.close();
            stmt.close();
            rs.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void btntimhdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimhdActionPerformed
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();

            int dem = 0;
            String sqlktra = "select* from hoadon";
            ResultSet rsktra = stmt.executeQuery(sqlktra);
            while (rsktra.next()) {
                if (txtmahd.getText().equals(rsktra.getString(1))) {
                    dem++;
                }
            }
            if (dem == 0) {
                JOptionPane.showMessageDialog(rootPane, "hóa dơn này không có!\n Bạn cần nhập mã đúng hóa đơn để tìm kiếm!!!");
                return;
            }

            int sohang1 = tableModelhd.getRowCount() - 1;
            for (int i = sohang1; i >= 0; i--) {
                tableModelhd.removeRow(i);
            }
            String sql = "select* from hoadon where MaHD='" + txtmahd.getText() + "'";
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                String[] rows = new String[7];
                rows[0] = rs.getString(1);
                rows[1] = rs.getString(2);
                rows[2] = rs.getString(3);
                rows[3] = rs.getString(4);
                rows[4] = rs.getString(5);
                rows[5] = rs.getString(6);
                rows[6] = rs.getString(7);
                tableModelhd.addRow(rows);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btntimhdActionPerformed

    private void btnxoahdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoahdActionPerformed
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName(JDBC_DRIVER);
            System.out.println("da ket noi CSDL");
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            System.out.println("tao cau lenh truy van sql...");
            stmt = con.createStatement();

            int dem = 0;
            String sql = "select*from hoadon";
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                if (txtmahd.getText().equals(rs.getString(1))) {
                    dem++;
                }
            }
            if (dem == 0) {
                JOptionPane.showMessageDialog(rootPane, "Hóa đươn này không có\n Bạn cần nhập đúng mã hóa đơn để xóa!!!!");
                return;
            }

            int yesno = JOptionPane.showConfirmDialog(null, "bạn có chắc chắn muốn xóa hóa đơn này không!!!", "xóa hóa đơn", JOptionPane.YES_NO_OPTION);
            if (yesno == 0) {
                int sohang = tableModelhd.getRowCount() - 1;
                for (int i = sohang; i >= 0; i--) {
                    if (String.valueOf(tableModelhd.getValueAt(i, 0)).toLowerCase().equals(txtmahd.getText())) {
                        tableModelhd.removeRow(i);
                    }

                }

                String sqlxoa = "delete from hoadon where MaHD='" + txtmahd.getText() + "'";
                int ktra = stmt.executeUpdate(sqlxoa);
                if (ktra == 0) {
                    System.out.println("delete false!!!");
                } else {
                    System.out.println("delete successfully");
                }
                JOptionPane.showMessageDialog(rootPane, "Xóa thành công!!!");
            }
            XoaTextfield();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnxoahdActionPerformed

    private void btnsuahdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuahdActionPerformed
        Connection con = null;
        Statement stmt = null;
        //SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String ngay = txtngaylap.getText();

        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();

            String sqlktra = "select* from hoadon";
            ResultSet rsktra = stmt.executeQuery(sqlktra);
            while (rsktra.next()) {
                if (txtmahd.getText().equals(rsktra.getString(1))) {
                    String sqlsua = "update hoadon set MaHD='" + txtmahd.getText() + "',NgayLap='" + ngay + "',TenNV='" + txttennv.getText() + "',TenKH='" + txttenkh.getText() + "',GhiChu='" + txtghichu.getText() + "',MaKH='" + txtmakh.getText() + "',MaNV='" + txtmanv.getText() + "'where MaHD='" + txtmahd.getText() + "'";
                    stmt.executeUpdate(sqlsua);
                    int sohang = tableModelhd.getRowCount() - 1;
                    for (int i = sohang; i >= 0; i--) {
                        tableModelhd.removeRow(i);
                    }
                    String selectall = "select*from hoadon";
                    ResultSet rs = stmt.executeQuery(selectall);
                    while (rs.next()) {
                        String[] rows = new String[7];
                        rows[0] = rs.getString(1);
                        rows[1] = rs.getString(2);
                        rows[2] = rs.getString(3);
                        rows[3] = rs.getString(4);
                        rows[4] = rs.getString(5);
                        rows[5] = rs.getString(6);
                        rows[6] = rs.getString(7);
                        tableModelhd.addRow(rows);
                    }
                    JOptionPane.showMessageDialog(rootPane, "sửa thành công!!!");
                    return;
                }
            }
            JOptionPane.showMessageDialog(rootPane, "không có hóa đơn này!\n Bạn cần nhập đúng mã hóa đơn để sửa!!!");

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnsuahdActionPerformed

    private void btnthemhdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemhdActionPerformed
        Connection con = null;
        Statement stmt = null;

        String ngay = txtngaylap.getText();
        String mahd = txtmahd.getText();
        String tennv = txttennv.getText();
        String tenkh = txttenkh.getText();
        String ghichu = txtghichu.getText();
        String makh = txtmakh.getText();
        String manv = txtmanv.getText();

        try {
            Class.forName(JDBC_DRIVER);
            System.out.println("da ket noi CSDL");
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            System.out.println("tao cau lenh truy van sql...");
            stmt = con.createStatement();

            if (ngay.equals("") || mahd.equals("") || tennv.equals("") || tenkh.equals("") || ghichu.equals("") || makh.equals("") || manv.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Thêm mới thất bại! \n Bạn cần điền đầy đủ thông tin vào các ô!!!");
                return;
            } else {
                //ktra nhap tennv
                String sqltennv = "select* from nhanvien";
                ResultSet rstennv = stmt.executeQuery(sqltennv);
                while (rstennv.next()) {
                    if (txttennv.getText().equals(rstennv.getString(2))) {
                        //thuc hien them hoa don
                        String ma = "select MaHD from hoadon where MaHD='" + txtmahd.getText() + "'";
                        ResultSet rs1 = stmt.executeQuery(ma);
                        while (rs1.next()) {
                            JOptionPane.showMessageDialog(rootPane, "MaHD nay da ton tai!!");
                            return;
                        }

                        String sqlthem = "insert into hoadon value('" + mahd + "','" + ngay + "','" + tennv + "','" + tenkh + "','" + ghichu + "','" + makh + "','" + manv + "');";
                        int numberrows = stmt.executeUpdate(sqlthem);

                        if (numberrows == 0) {
                            System.out.println("insertion falsed");
                        } else {
                            System.out.println("insertion succesfully");
                        }
                        int sohang = tableModelhd.getRowCount() - 1;
                        for (int i = sohang; i >= 0; i--) {
                            tableModelhd.removeRow(i);
                        }

                        String sql = "select*from hoadon";
                        ResultSet rs = stmt.executeQuery(sql);
                        while (rs.next()) {
                            String[] rows = new String[7];
                            rows[0] = rs.getString(1);
                            rows[1] = rs.getString(2);
                            rows[2] = rs.getString(3);
                            rows[3] = rs.getString(4);
                            rows[4] = rs.getString(5);
                            rows[5] = rs.getString(6);
                            rows[6] = rs.getString(7);
                            tableModelhd.addRow(rows);
                        }
                        JOptionPane.showMessageDialog(rootPane, "Thêm thành công!!!");
                        rs.close();
                        XoaTextfield();
                        return;
                    }

                }
                JOptionPane.showMessageDialog(rootPane, "không tồn tại tên nhân viên này");

                XoaTextfield();
                con.close();
                stmt.close();
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnthemhdActionPerformed

    private void tbhoadonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbhoadonMouseClicked
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();

            int row = tbhoadon.getSelectedRow();
            String mahd = (String) tbhoadon.getValueAt(row, 0);
            String ngaylap = (String) tbhoadon.getValueAt(row, 1);
            String tennv = (String) tbhoadon.getValueAt(row, 2);
            String tenkh = (String) tbhoadon.getValueAt(row, 3);
            String ghichu = (String) tbhoadon.getValueAt(row, 4);
            String makh = (String) tbhoadon.getValueAt(row, 5);
            String manv = (String) tbhoadon.getValueAt(row, 6);

            txtmahd.setText(mahd);
            txtngaylap.setText(ngaylap);
            txttennv.setText(tennv);
            txttenkh.setText(tenkh);
            txtghichu.setText(ghichu);
            txtmakh.setText(makh);
            txtmanv.setText(manv);

            int sohang = tableModelcthd.getRowCount() - 1;
            for (int i = sohang; i >= 0; i--) {
                tableModelcthd.removeRow(i);
            }

            String sqlcthd = "select*from chitiethd where MaHD='" + mahd + "'";
            ResultSet rs = stmt.executeQuery(sqlcthd);

            while (rs.next()) {
                String[] rows = new String[5];
                rows[0] = rs.getString(1);
                rows[1] = rs.getString(2);
                rows[2] = rs.getString(3);
                rows[3] = rs.getString(4);
                rows[4] = rs.getString(5);
                tableModelcthd.addRow(rows);
            }

            int soHang1 = tbcthd.getRowCount() - 1;
            int tong = 0;
            for (int i = soHang1; i >= 0; i--) {
                tong = tong + Integer.parseInt(String.valueOf(tbcthd.getValueAt(i, 3))) * Integer.parseInt(String.valueOf(tbcthd.getValueAt(i, 4)));
            }
            lbtongtien.setText(String.valueOf(tong));
            con.close();
            rs.close();
            stmt.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tbhoadonMouseClicked

    private void btnxoaspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaspActionPerformed
        Connection con = null;
        Statement stmt = null;
        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();

            if (txtmahdct.getText().equals("") || txtmasp.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane, "bạn cần nhập mã hd và mã sp để xóa!!!");
            } else {
                int yesno = JOptionPane.showConfirmDialog(null, "bạn có chắc chắn muốn xóa không!!!", "Xóa sản phẩm", JOptionPane.YES_NO_OPTION);
                if (yesno == 0) {
                    int sohang = tableModelcthd.getRowCount() - 1;
                    for (int i = sohang; i >= 0; i--) {
                        if (String.valueOf(tableModelcthd.getValueAt(i, 0)).toLowerCase().equals(txtmahdct.getText()) && String.valueOf(tableModelcthd.getValueAt(i, 1)).toLowerCase().equals(txtmasp.getText())) {
                            tableModelcthd.removeRow(i);
                        }
                    }
                    //update sl bảng sanpham
                    String sql = "select* from sanpham";
                    ResultSet rs = stmt.executeQuery(sql);
                    int sl = 0;
                    int slhoantra = Integer.parseInt(txtsoluong.getText());
                    while (rs.next()) {
                        sl = Integer.parseInt(rs.getString(5));
                    }
                    int slmoi = sl + slhoantra;
                    String sqlupdate = "update sanpham set SoLuong='" + slmoi + "' where MaSP='" + txtmasp.getText() + "'";
                    int numberupdate = stmt.executeUpdate(sqlupdate);
                    if (numberupdate == 0) {
                        System.out.println("hoàn trả thất bại");
                    } else {
                        System.out.println("đã hoàn trả số lượng về bảng sản phẩm");
                    }

                    //delete bảng chitietphieuxuat
                    String sqlxoapx = "delete from chitietphieuxuat where MaSP='" + txtmasp.getText() + "'";
                    int numberxoapx = stmt.executeUpdate(sqlxoapx);
                    if (numberxoapx == 0) {
                        System.out.println("delete chitietphieuxuat false");
                    } else {
                        System.out.println("delete chitietphieuxuat succesfully");
                    }

                    //delete bảng chitiethd
                    String sqlxoa = "delete from chitiethd where MaHD='" + txtmahdct.getText() + "'and MaSP='" + txtmasp.getText() + "'";
                    int numberxoa = stmt.executeUpdate(sqlxoa);
                    if (numberxoa == 0) {
                        System.out.println("delete false");
                    } else {
                        System.out.println("delete seccesfully");
                    }
                    JOptionPane.showMessageDialog(rootPane, "Xóa thành công!!!");
                }
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnxoaspActionPerformed

    private void tbcthdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbcthdMouseClicked
        int row = tbcthd.getSelectedRow();
        String mahd = (String) tbcthd.getValueAt(row, 0);
        String masp = (String) tbcthd.getValueAt(row, 1);
        String tensp = (String) tbcthd.getValueAt(row, 2);
        String sl = (String) tbcthd.getValueAt(row, 3);
        String dg = (String) tbcthd.getValueAt(row, 4);

        txtmahdct.setText(mahd);
        txttensp.setText(tensp);
        txtdongia.setText(dg);
        txtsoluong.setText(sl);
        txtmasp.setText(masp);
    }//GEN-LAST:event_tbcthdMouseClicked

    private void txtdiachiNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdiachiNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdiachiNActionPerformed

    private void btndangxuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndangxuatActionPerformed
        new Login().setVisible(true);
        this.setVisible(false);


    }//GEN-LAST:event_btndangxuatActionPerformed

    //============================quản lý phiếu thu chi=================================
    private void btnhienthiphieuthuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhienthiphieuthuActionPerformed
        hienthiphieuthu();
    }//GEN-LAST:event_btnhienthiphieuthuActionPerformed
    private void hienthiphieuthu() {
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();
            int sohang = tableModelphieuthu.getRowCount() - 1;
            for (int i = sohang; i >= 0; i--) {
                tableModelphieuthu.removeRow(i);
            }
            String sql = "select* from chitietphieuxuat";
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                String[] colums = new String[8];
                colums[0] = rs.getString(1);
                colums[1] = rs.getString(2);
                colums[2] = rs.getString(3);
                colums[3] = rs.getString(4);
                colums[4] = rs.getString(5);
                colums[5] = rs.getString(6);
                colums[6] = rs.getString(7);
                colums[7] = rs.getString(8);
                tableModelphieuthu.addRow(colums);
            }
            int tongthu = 0;
            int b = tableModelphieuthu.getRowCount() - 1;
            for (int i = b; i >= 0; i--) {
                tongthu = tongthu + Integer.parseInt(String.valueOf(tableModelphieuthu.getValueAt(i, 5))) * Integer.parseInt(String.valueOf(tableModelphieuthu.getValueAt(i, 6)));
            }
            lbtongthu.setText(String.valueOf(tongthu));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void btntimkiemphieuthuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemphieuthuActionPerformed
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();
            if (rbsopxthu.isSelected()) {
                int sohang1 = tableModelphieuthu.getRowCount() - 1;
                for (int i = sohang1; i >= 0; i--) {
                    tableModelphieuthu.removeRow(i);
                }

                if (txtsopxthu.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Không được để trống ô số phiếu xuất!!!");
                    return;
                } else {
                    String sqlktra = "select* from chitietphieuxuat";
                    ResultSet rsktra = stmt.executeQuery(sqlktra);
                    while (rsktra.next()) {
                        if (txtsopxthu.getText().equals(rsktra.getString(1))) {
                            String sqlsopx = "select* from chitietphieuxuat where SoPX='" + txtsopxthu.getText() + "'";
                            ResultSet rssopx = stmt.executeQuery(sqlsopx);
                            while (rssopx.next()) {
                                String[] colums = new String[8];
                                colums[0] = rssopx.getString(1);
                                colums[1] = rssopx.getString(2);
                                colums[2] = rssopx.getString(3);
                                colums[3] = rssopx.getString(4);
                                colums[4] = rssopx.getString(5);
                                colums[5] = rssopx.getString(6);
                                colums[6] = rssopx.getString(7);
                                colums[7] = rssopx.getString(8);
                                tableModelphieuthu.addRow(colums);
                            }
                            txtsopxthu.setText(null);
                            int tongthu = 0;
                            int b = tableModelphieuthu.getRowCount() - 1;
                            for (int i = b; i >= 0; i--) {
                                tongthu = tongthu + Integer.parseInt(String.valueOf(tableModelphieuthu.getValueAt(i, 5))) * Integer.parseInt(String.valueOf(tableModelphieuthu.getValueAt(i, 6)));
                            }
                            lbtongthu.setText(String.valueOf(tongthu));
                            return;
                        }
                    }
                    JOptionPane.showMessageDialog(rootPane, "không có mã phiếu xuất này!!!");
                    txtsopxthu.setText(null);
                }
            } else if (rbmaspthu.isSelected()) {
                int sohang2 = tableModelphieuthu.getRowCount() - 1;
                for (int i = sohang2; i >= 0; i--) {
                    tableModelphieuthu.removeRow(i);
                }

                if (txtmaspthu.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "không được để trống ô mã sản phẩm của phiếu thu!!!");
                    return;
                } else {
                    String sqlktra = "select* from chitietphieuxuat";
                    ResultSet rsktra = stmt.executeQuery(sqlktra);
                    while (rsktra.next()) {
                        if (txtmaspthu.getText().equals(rsktra.getString(2))) {
                            String sqlsopx = "select* from chitietphieuxuat where MaSP='" + txtmaspthu.getText() + "'";
                            ResultSet rssopx = stmt.executeQuery(sqlsopx);
                            while (rssopx.next()) {
                                String[] colums = new String[8];
                                colums[0] = rssopx.getString(1);
                                colums[1] = rssopx.getString(2);
                                colums[2] = rssopx.getString(3);
                                colums[3] = rssopx.getString(4);
                                colums[4] = rssopx.getString(5);
                                colums[5] = rssopx.getString(6);
                                colums[6] = rssopx.getString(7);
                                colums[7] = rssopx.getString(8);
                                tableModelphieuthu.addRow(colums);
                            }
                            txtmaspthu.setText(null);
                            int tongthu = 0;
                            int b = tableModelphieuthu.getRowCount() - 1;
                            for (int i = b; i >= 0; i--) {
                                tongthu = tongthu + Integer.parseInt(String.valueOf(tableModelphieuthu.getValueAt(i, 5))) * Integer.parseInt(String.valueOf(tableModelphieuthu.getValueAt(i, 6)));
                            }
                            lbtongthu.setText(String.valueOf(tongthu));

                            return;
                        }

                    }
                    JOptionPane.showMessageDialog(rootPane, "không có mã sản phẩm này!!!");
                    txtmaspthu.setText(null);
                }

            } else if (rbngayxuatthu.isSelected()) {
                int sohang3 = tableModelphieuthu.getRowCount() - 1;
                for (int i = sohang3; i >= 0; i--) {
                    tableModelphieuthu.removeRow(i);
                }

                if (txttungayxuatthu.getText().equals("") || txtdenngayxuatthu.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Không đưuọc để trống ô từ ngày và đến ngày trong bảng phiếu thu!!!");
                    return;
                } else {
                    Date tungay = new SimpleDateFormat("yyyy-MM-dd").parse(txttungayxuatthu.getText());
                    Date denngay = new SimpleDateFormat("yyyy-MM-dd").parse(txtdenngayxuatthu.getText());

                    String sqlktra = "select* from chitietphieuxuat";
                    ResultSet rsktra = stmt.executeQuery(sqlktra);
                    while (rsktra.next()) {
                        Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse(rsktra.getString(8));
                        if (date1.compareTo(tungay) >= 0 && date1.compareTo(denngay) <= 0) {
                            String sqlsopx = "select* from chitietphieuxuat where NgayXuat between'" + txttungayxuatthu.getText() + "'and'" + txtdenngayxuatthu.getText() + "'";
                            ResultSet rssopx = stmt.executeQuery(sqlsopx);
                            while (rssopx.next()) {
                                String[] colums = new String[8];
                                colums[0] = rssopx.getString(1);
                                colums[1] = rssopx.getString(2);
                                colums[2] = rssopx.getString(3);
                                colums[3] = rssopx.getString(4);
                                colums[4] = rssopx.getString(5);
                                colums[5] = rssopx.getString(6);
                                colums[6] = rssopx.getString(7);
                                colums[7] = rssopx.getString(8);
                                tableModelphieuthu.addRow(colums);
                            }
                            txttungayxuatthu.setText(null);
                            txtdenngayxuatthu.setText(null);
                            int tongthu = 0;
                            int b = tableModelphieuthu.getRowCount() - 1;
                            for (int i = b; i >= 0; i--) {
                                tongthu = tongthu + Integer.parseInt(String.valueOf(tableModelphieuthu.getValueAt(i, 5))) * Integer.parseInt(String.valueOf(tableModelphieuthu.getValueAt(i, 6)));
                            }
                            lbtongthu.setText(String.valueOf(tongthu));
                            return;
                        }
                    }
                    JOptionPane.showMessageDialog(rootPane, "không có phiếu xuất nào trong khoảng ngày này!!!");
                    txttungayxuatthu.setText(null);
                    txtdenngayxuatthu.setText(null);
                }
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btntimkiemphieuthuActionPerformed

    private void btnhienthiphieuchiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhienthiphieuchiActionPerformed
        hienthiphieuchi();
    }//GEN-LAST:event_btnhienthiphieuchiActionPerformed
    private void hienthiphieuchi() {
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();
            int sohang = tableModelphieuchi.getRowCount() - 1;
            for (int i = sohang; i >= 0; i--) {
                tableModelphieuchi.removeRow(i);
            }
            String sql = "select* from chitietphieunhap ";
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                String[] colums = new String[8];
                colums[0] = rs.getString(1);
                colums[1] = rs.getString(2);
                colums[2] = rs.getString(3);
                colums[3] = rs.getString(4);
                colums[4] = rs.getString(5);
                colums[5] = rs.getString(6);
                colums[6] = rs.getString(7);
                colums[7] = rs.getString(8);
                tableModelphieuchi.addRow(colums);
            }
            int tongthu = 0;
            int b = tableModelphieuchi.getRowCount() - 1;
            for (int i = b; i >= 0; i--) {
                tongthu = tongthu + Integer.parseInt(String.valueOf(tableModelphieuchi.getValueAt(i, 5))) * Integer.parseInt(String.valueOf(tableModelphieuchi.getValueAt(i, 6)));
            }
            lbtongchi.setText(String.valueOf(tongthu));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void btntimkiemphieuchiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemphieuchiActionPerformed
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();
            if (rbsopnchi.isSelected()) {
                int sohang1 = tableModelphieuchi.getRowCount() - 1;
                for (int i = sohang1; i >= 0; i--) {
                    tableModelphieuchi.removeRow(i);
                }

                if (txtsopnchi.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Không được để trống ô số phiếu nhập!!!");
                    return;
                } else {
                    String sqlktra = "select* from chitietphieunhap";
                    ResultSet rsktra = stmt.executeQuery(sqlktra);
                    while (rsktra.next()) {
                        if (txtsopnchi.getText().equals(rsktra.getString(1))) {
                            String sqlsopx = "select* from chitietphieunhap where SoPN='" + txtsopnchi.getText() + "'";
                            ResultSet rssopx = stmt.executeQuery(sqlsopx);
                            while (rssopx.next()) {
                                String[] colums = new String[8];
                                colums[0] = rssopx.getString(1);
                                colums[1] = rssopx.getString(2);
                                colums[2] = rssopx.getString(3);
                                colums[3] = rssopx.getString(4);
                                colums[4] = rssopx.getString(5);
                                colums[5] = rssopx.getString(6);
                                colums[6] = rssopx.getString(7);
                                colums[7] = rssopx.getString(8);
                                tableModelphieuchi.addRow(colums);
                            }
                            txtsopnchi.setText(null);
                            int tongchi = 0;
                            int b = tableModelphieuchi.getRowCount() - 1;
                            for (int i = b; i >= 0; i--) {
                                tongchi = tongchi + Integer.parseInt(String.valueOf(tableModelphieuchi.getValueAt(i, 5))) * Integer.parseInt(String.valueOf(tableModelphieuchi.getValueAt(i, 6)));
                            }
                            lbtongchi.setText(String.valueOf(tongchi));
                            return;
                        }
                    }
                    JOptionPane.showMessageDialog(rootPane, "không có phiếu nhập này!!!");
                    txtsopnchi.setText(null);
                }
            } else if (rbmaspchi.isSelected()) {
                int sohang2 = tableModelphieuchi.getRowCount() - 1;
                for (int i = sohang2; i >= 0; i--) {
                    tableModelphieuchi.removeRow(i);
                }
                if (txtmaspchi.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Không được để trống ô mã sản phẩm của bảng phiếu chi!!!");
                    return;
                } else {
                    String sqlktra = "select* from chitietphieunhap";
                    ResultSet rsktra = stmt.executeQuery(sqlktra);
                    while (rsktra.next()) {
                        if (txtmaspchi.getText().equals(rsktra.getString(2))) {
                            String sqlsopx = "select* from chitietphieunhap where MaSP='" + txtmaspchi.getText() + "'";
                            ResultSet rssopx = stmt.executeQuery(sqlsopx);
                            while (rssopx.next()) {
                                String[] colums = new String[8];
                                colums[0] = rssopx.getString(1);
                                colums[1] = rssopx.getString(2);
                                colums[2] = rssopx.getString(3);
                                colums[3] = rssopx.getString(4);
                                colums[4] = rssopx.getString(5);
                                colums[5] = rssopx.getString(6);
                                colums[6] = rssopx.getString(7);
                                colums[7] = rssopx.getString(8);
                                tableModelphieuchi.addRow(colums);
                            }
                            txtmaspchi.setText(null);
                            int tongchi = 0;
                            int b = tableModelphieuchi.getRowCount() - 1;
                            for (int i = b; i >= 0; i--) {
                                tongchi = tongchi + Integer.parseInt(String.valueOf(tableModelphieuchi.getValueAt(i, 5))) * Integer.parseInt(String.valueOf(tableModelphieuchi.getValueAt(i, 6)));
                            }
                            lbtongchi.setText(String.valueOf(tongchi));
                            return;
                        }
                    }
                    JOptionPane.showMessageDialog(rootPane, "không có sản phẩm này!!!");
                    txtmaspchi.setText(null);
                }
            } else if (rbngaynhapchi.isSelected()) {
                int sohang3 = tableModelphieuchi.getRowCount() - 1;
                for (int i = sohang3; i >= 0; i--) {
                    tableModelphieuchi.removeRow(i);
                }
                if (txttungaynhapchi.getText().equals("") || txtdenngaynhapchi.getText().equals("")) {
                    JOptionPane.showMessageDialog(rootPane, "Không được để trống ô từ ngày và đến ngày trong bảng phiếu chi!!!");
                    return;
                } else {
                    Date tungay = new SimpleDateFormat("yyyy-MM-dd").parse(txttungaynhapchi.getText());
                    Date denngay = new SimpleDateFormat("yyyy-MM-dd").parse(txtdenngaynhapchi.getText());

                    String sqlktra = "select* from chitietphieunhap";
                    ResultSet rsktra = stmt.executeQuery(sqlktra);
                    while (rsktra.next()) {
                        Date date1 = new SimpleDateFormat("yyyy-MM-dd").parse(rsktra.getString(8));
                        if (date1.compareTo(tungay) >= 0 && date1.compareTo(denngay) <= 0) {
                            String sqlsopx = "select* from chitietphieunhap where NgayNhap between'" + txttungaynhapchi.getText() + "'and'" + txtdenngaynhapchi.getText() + "'";
                            ResultSet rssopx = stmt.executeQuery(sqlsopx);
                            while (rssopx.next()) {
                                String[] colums = new String[8];
                                colums[0] = rssopx.getString(1);
                                colums[1] = rssopx.getString(2);
                                colums[2] = rssopx.getString(3);
                                colums[3] = rssopx.getString(4);
                                colums[4] = rssopx.getString(5);
                                colums[5] = rssopx.getString(6);
                                colums[6] = rssopx.getString(7);
                                colums[7] = rssopx.getString(8);
                                tableModelphieuchi.addRow(colums);
                            }
                            txttungaynhapchi.setText(null);
                            txtdenngaynhapchi.setText(null);
                            int tongchi = 0;
                            int b = tableModelphieuchi.getRowCount() - 1;
                            for (int i = b; i >= 0; i--) {
                                tongchi = tongchi + Integer.parseInt(String.valueOf(tableModelphieuchi.getValueAt(i, 5))) * Integer.parseInt(String.valueOf(tableModelphieuchi.getValueAt(i, 6)));
                            }
                            lbtongchi.setText(String.valueOf(tongchi));
                            return;
                        }
                    }
                    JOptionPane.showMessageDialog(rootPane, "không có phiếu nhập nào trong khoảng ngày này!!!");
                    txttungaynhapchi.setText(null);
                    txtdenngaynhapchi.setText(null);
                }
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btntimkiemphieuchiActionPerformed

    //=============================Quản lý khách hàng===================================
    private void btnhienthiNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnhienthiNActionPerformed
        HienThi();
    }//GEN-LAST:event_btnhienthiNActionPerformed

    private void btnthemNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemNActionPerformed
        String MaKH = null, TenKH = null, NgaySinh = null, SDT = null, DiaChi = null;
        String GhiChu = txtghichuN.getText();
        int GioiTinh = 0;
        boolean isOK = true;

        if ("".equals(txtmakhN.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Mã khách hàng không được để trống!");
            isOK = false;
        } else {
            MaKH = txtmakhN.getText();
            if ("".equals(txthotenN.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Tên khách hàng không được để trống!");
                isOK = false;
            } else {
                TenKH = txthotenN.getText();
                if ("".equals(txtngaysinhN.getText())) {
                    JOptionPane.showMessageDialog(rootPane, "Ngày sinh không được để trống!");
                    isOK = false;
                } else {
                    NgaySinh = txtngaysinhN.getText();
                    if ("".equals(txtsdtN.getText())) {
                        JOptionPane.showMessageDialog(rootPane, "Số điện thoại không được để trống!");
                        isOK = false;
                    } else {
                        SDT = txtsdtN.getText();
                        if ("".equals(txtdiachiN.getText())) {
                            JOptionPane.showMessageDialog(rootPane, "Địa chỉ không được để trống!");
                            isOK = false;
                        } else {
                            DiaChi = txtdiachiN.getText();
                        }
                    }
                }
            }
        }

        if (radionamN.isSelected()) {
            GioiTinh = 1;
        } else if (radionuN.isSelected()) {
            GioiTinh = 0;
        }
        for (khachhang i : new Connect().laydanhsach()) {
            if ((i.getMakh()).equals(txtmakhN.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Mã khách hàng này đã tồn tại!");
                isOK = false;
            }
        }
        if (isOK) {
            khachhang kh = new khachhang(MaKH, TenKH, NgaySinh, SDT, DiaChi, GioiTinh, GhiChu);
            new Connect().themMoi(kh);
            JOptionPane.showMessageDialog(rootPane, "Thêm mới thành công!");
            HienThi();
            xoatextbox();
        }
    }//GEN-LAST:event_btnthemNActionPerformed

    private void btnsuaNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaNActionPerformed
        String MaKH = null, TenKH = null, NgaySinh = null, SDT = null, DiaChi = null;
        String GhiChu = txtghichuN.getText();
        int GioiTinh = 0;
        boolean isOK = true;

        if ("".equals(txtmakhN.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Mã khách hàng không được để trống!");
            isOK = false;
        } else {
            MaKH = txtmakhN.getText();
            if ("".equals(txthotenN.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Tên khách hàng không được để trống!");
                isOK = false;
            } else {
                TenKH = txthotenN.getText();
                if ("".equals(txtngaysinhN.getText())) {
                    JOptionPane.showMessageDialog(rootPane, "Ngày sinh không được để trống!");
                    isOK = false;
                } else {
                    NgaySinh = txtngaysinhN.getText();
                    if ("".equals(txtsdtN.getText())) {
                        JOptionPane.showMessageDialog(rootPane, "Số điện thoại không được để trống!");
                        isOK = false;
                    } else {
                        SDT = txtsdtN.getText();
                        if ("".equals(txtdiachiN.getText())) {
                            JOptionPane.showMessageDialog(rootPane, "Địa chỉ không được để trống!");
                            isOK = false;
                        } else {
                            DiaChi = txtdiachiN.getText();
                        }
                    }
                }
            }
        }
        int check = 0;
        for (khachhang i : new Connect().laydanhsach()) {
            if ((i.getMakh()).equals(txtmakhN.getText())) {
                check++;
            }
        }

        if (check == 0) {
            isOK = false;
            JOptionPane.showMessageDialog(rootPane, "Mã khách hàng không tồn tại!");
        }

        if (radionamN.isSelected()) {
            GioiTinh = 1;
        } else if (radionuN.isSelected()) {
            GioiTinh = 0;
        }

        if (isOK) {
            khachhang kh = new khachhang(MaKH, TenKH, NgaySinh, SDT, DiaChi, GioiTinh, GhiChu);
            new Connect().sua(kh);
            JOptionPane.showMessageDialog(rootPane, "Cập nhật thành công!");
            int vitri = tbkhachhang.getSelectedRow();
            danhsach.remove(vitri);
            danhsach.add(kh);
            HienThi();
            xoatextbox();
        }
    }//GEN-LAST:event_btnsuaNActionPerformed

    private void btntimkiemNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemNActionPerformed
        if (combotimN.getSelectedIndex() == 0) {
            String TenKH = null;
            boolean isOK = true;
            if ("".equals(txttimkiemN.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Nhập tên khách hàng để tìm kiếm!");
                isOK = false;
            } else {
                TenKH = txttimkiemN.getText();
            }
            //new Connect().timkiem(ten);
            if (isOK) {
                model = (DefaultTableModel) tbkhachhang.getModel();
                danhsach = new Connect().timkiemten(TenKH);
                model.setRowCount(0);
                int stt = 1;
                for (khachhang kh1 : danhsach) {
                    model.addRow(new Object[]{
                        stt++, kh1.getMakh(), kh1.getHoten(), kh1.getNgaysinh(), kh1.getSdt(), kh1.getDiachi(), kh1.getGioitinh() == 1 ? "Nam" : "Nữ", kh1.getGhichu()
                    });
                }
                if (model.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy!");
                }
            }

        } else if (combotimN.getSelectedIndex() == 1) {
            String MaKH = null;
            boolean isOK = true;
            if ("".equals(txttimkiemN.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Nhập mã khách hàng để tìm kiếm!");
                isOK = false;
            } else {
                MaKH = txttimkiemN.getText();
            }
            //new Connect().timkiem(ten);
            if (isOK) {
                model = (DefaultTableModel) tbkhachhang.getModel();
                danhsach = new Connect().timKiemMa(MaKH);
                model.setRowCount(0);
                int stt = 1;
                for (khachhang kh1 : danhsach) {
                    model.addRow(new Object[]{
                        stt++, kh1.getMakh(), kh1.getHoten(), kh1.getNgaysinh(), kh1.getSdt(), kh1.getDiachi(), kh1.getGioitinh() == 1 ? "Nam" : "Nữ", kh1.getGhichu()
                    });
                }
                if (model.getRowCount() == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Không tìm thấy!");
                }
            }

        }
    }//GEN-LAST:event_btntimkiemNActionPerformed

    private void tbkhachhangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbkhachhangMouseClicked
        int vitri = tbkhachhang.getSelectedRow();
        khachhang kh = danhsach.get(vitri);

        txtmakhN.setText(kh.getMakh());
        txthotenN.setText(kh.getHoten());
        txtngaysinhN.setText(kh.getNgaysinh());
        txtsdtN.setText(kh.getSdt());
        txtdiachiN.setText(kh.getDiachi());
        txtghichuN.setText(kh.getGhichu());

        if (kh.getGioitinh() == 1) {
            radionamN.setSelected(true);
        } else if (kh.getGioitinh() == 0) {
            radionuN.setSelected(true);
        }
    }//GEN-LAST:event_tbkhachhangMouseClicked

    public void xoatextbox() {
        txtmakhN.setText("");
        txthotenN.setText("");
        txtngaysinhN.setText("");
        txtsdtN.setText("");
        txtdiachiN.setText("");
        radionamN.setSelected(true);
        txtghichuN.setText("");
    }

    private ArrayList<khachhang> danhsach = new ArrayList<>();
    private DefaultTableModel model;

    public void HienThi() {
        int stt = 1;
        model = (DefaultTableModel) tbkhachhang.getModel();

        danhsach = new Connect().laydanhsach();
        model.setRowCount(0);
        for (khachhang kh : danhsach) {
            model.addRow(new Object[]{
                stt++, kh.getMakh(), kh.getHoten(), kh.getNgaysinh(), kh.getSdt(), kh.getDiachi(), kh.getGioitinh() == 1 ? "Nam" : "Nữ", kh.getGhichu()
            });
        }
    }

    private ArrayList<doanhthu> danhsach1 = new ArrayList<>();
    private DefaultTableModel model1;

    public void HienThiDT() {
        model = (DefaultTableModel) tbdoanhthu.getModel();
        int stt = 0;

        danhsach1 = new Connect().laydanhsach1();
        model.setRowCount(0);
        for (doanhthu dt : danhsach1) {
            model.addRow(new Object[]{
                stt++, dt.getMaSP(), dt.getTenSP(), dt.getSoLuong(), dt.getDonGia(), dt.getTenKH(), dt.getGhiChu(), dt.getMaHD()
            });
        }
        lbtonghoadonN.setText(Integer.toString(new Connect().tongHD()));
        lbtongsokhachN.setText(Integer.toString(new Connect().tongKhach()));
        lbdoanhthuN.setText(Integer.toString(new Connect().tongDoanhThu()));
    }

    //=======================QUẢN LÝ SẢN PHẨM=======================
    private void XoaTextfieldSP() {
        txtMaSP.setText(null);
        txtTenSP.setText(null);
        txtLoai.setText(null);
        txtXuatXu.setText(null);
        txtSL.setText(null);
        txtDonGia.setText(null);
        txtMaHDSP.setText(null);
        txtMaGD.setText(null);
    }
    private void btnThemSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPActionPerformed
        if (txtMaSP.getText().equals("") || txtDonGia.getText().equals("") || txtTenSP.getText().equals("") || txtLoai.getText().equals("") || txtXuatXu.getText().equals("") || txtSL.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Bạn không được để trống thông tin sản phẩm!!");
        } else {
            Connection con = null;
            Statement stmt = null;

            String maSP = txtMaSP.getText();
            String tenSP = txtTenSP.getText();
            String Loai = txtLoai.getText();
            String xuatXu = txtXuatXu.getText();
            int soLuong = Integer.parseInt(txtSL.getText());
            int donGia = Integer.parseInt(txtDonGia.getText());

            try {

                Class.forName(JDBC_DRIVER);
                System.out.println("da ket noi CSDL");
                con = DriverManager.getConnection(DB_URL, USER, PASS);
                System.out.println("tao cau lenh truy van sql...");
                stmt = con.createStatement();

                String sqlMaSP = "select MaSP from sanpham where MaSP='" + maSP + "'";
                ResultSet rs1 = stmt.executeQuery(sqlMaSP);
                while (rs1.next()) {
                    JOptionPane.showMessageDialog(rootPane, "San Pham nay da ton tai!!");
                    return;
                }

                String sqlThemSP = "insert into sanpham value('" + maSP + "','" + tenSP + "','" + Loai + "','" + xuatXu + "','" + soLuong + "','" + donGia + "');";
                int numberrows = stmt.executeUpdate(sqlThemSP);

                if (numberrows == 0) {
                    System.out.println("insertion falsed");
                } else {
                    System.out.println("insertion succesfully");
                }
                int sohang = tableModelSP.getRowCount() - 1;
                for (int i = sohang; i >= 0; i--) {
                    tableModelSP.removeRow(i);
                }
                int sohangHT = tableModelHangTon.getRowCount() - 1;
                for (int i = sohang; i >= 0; i--) {
                    tableModelHangTon.removeRow(i);
                }
                String sql = "select * from sanpham";
                ResultSet rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    String[] rows = new String[6];
                    rows[0] = rs.getString(1);
                    rows[1] = rs.getString(2);
                    rows[2] = rs.getString(3);
                    rows[3] = rs.getString(4);
                    rows[4] = rs.getString(5);
                    rows[5] = rs.getString(6);
                    tableModelSP.addRow(rows);
                    tableModelHangTon.addRow(rows);
                }
                JOptionPane.showMessageDialog(rootPane, "Them thanh cong!");
                rs.close();
                XoaTextfieldSP();
                con.close();
                stmt.close();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btnThemSPActionPerformed

    private void btnSuaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaSPActionPerformed
        // TODO add your handling code here:
        if (txtMaSP.getText().equals("") || txtDonGia.getText().equals("") || txtTenSP.getText().equals("") || txtLoai.getText().equals("") || txtXuatXu.getText().equals("") || txtSL.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Bạn không được để trống thông tin sản phẩm!!");
            return ;
        }
        Connection con = null;
        Statement stmt = null;
        String maSP = txtMaSP.getText();
        String tenSP = txtTenSP.getText();
        String Loai = txtLoai.getText();
        String xuatXu = txtXuatXu.getText();
        int soLuong = Integer.parseInt(txtSL.getText());
        int donGia = Integer.parseInt(txtDonGia.getText());
        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();

            String sqlMaSP = "select MaSP from sanpham where MaSP='" + maSP + "'";
            ResultSet rs1 = stmt.executeQuery(sqlMaSP);

            while (rs1.next()) {
                if (txtMaSP.getText().equals(rs1.getString(1))) {
                    String sqlSuaSP = "update sanpham set TenSP='" + tenSP + "',Loai='" + Loai + "',XuatXu='" + xuatXu + "',SoLuong='" + soLuong + "',DonGia='" + donGia + "'where MaSP='" + maSP + "'";
                    stmt.executeUpdate(sqlSuaSP);
                    int sohang = tableModelSP.getRowCount() - 1;
                    for (int i = sohang; i >= 0; i--) {
                        tableModelSP.removeRow(i);
                    }
                    int sohangHT = tableModelHangTon.getRowCount() - 1;
                    for (int i = sohang; i >= 0; i--) {
                        tableModelHangTon.removeRow(i);
                    }
                    String selectall = "select * from sanpham";
                    ResultSet rs = stmt.executeQuery(selectall);
                    while (rs.next()) {
                        String[] rows = new String[6];
                        rows[0] = rs.getString(1);
                        rows[1] = rs.getString(2);
                        rows[2] = rs.getString(3);
                        rows[3] = rs.getString(4);
                        rows[4] = rs.getString(5);
                        rows[5] = rs.getString(6);
                        tableModelSP.addRow(rows);
                        tableModelHangTon.addRow(rows);
                    }
                    XoaTextfieldSP();
                    JOptionPane.showMessageDialog(rootPane, "Sua thanh cong!");
                    rs.close();
                    con.close();
                    stmt.close();
                    rs1.close();
                    return;
                }
            }
            JOptionPane.showMessageDialog(rootPane, "San Pham khong ton tai !!!");
            rs1.close();
            con.close();
            stmt.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSuaSPActionPerformed

    private void btnXoaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSPActionPerformed
        // TODO add your handling code here:
        if (txtMaSP.getText().equals("") || txtDonGia.getText().equals("") || txtTenSP.getText().equals("") || txtLoai.getText().equals("") || txtXuatXu.getText().equals("") || txtSL.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Bạn không được để trống thông tin sản phẩm!!");
            return ;
        }
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName(JDBC_DRIVER);
            System.out.println("da ket noi CSDL");
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            System.out.println("tao cau lenh truy van sql...");
            stmt = con.createStatement();

            int yesno = JOptionPane.showConfirmDialog(null, "Bạn có chắc chắn muốn xóa sản phẩm này không!!!", "xóa sản phẩm", JOptionPane.YES_NO_OPTION);
            if (yesno == 0) {
                int sohang = tableModelSP.getRowCount() - 1;
                for (int i = sohang; i >= 0; i--) {
                    if (String.valueOf(tableModelSP.getValueAt(i, 0)).toLowerCase().equals(txtMaSP.getText())) {
                        tableModelSP.removeRow(i);
                        tableModelHangTon.removeRow(i);
                    }

                }

                String sqlxoaSP = "delete from sanpham where MaSP='" + txtMaSP.getText() + "'";
                int ktra = stmt.executeUpdate(sqlxoaSP);
                if (ktra == 0) {
                    System.out.println("delete false!!!");
                } else {
                    System.out.println("delete successfully");
                    XoaTextfieldSP();
                    JOptionPane.showMessageDialog(rootPane, "Xoa thanh cong !!!");
                }
            }
            con.close();
            stmt.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnXoaSPActionPerformed

    private void btnTimSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimSPActionPerformed
        // TODO add your handling code here:
        if (txtMaSP.getText().equals("") || txtDonGia.getText().equals("") || txtTenSP.getText().equals("") || txtLoai.getText().equals("") || txtXuatXu.getText().equals("") || txtSL.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập mã sp!!");
            return ;
        }
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();

            String sql = "select * from sanpham where MaSP='" + txtMaSP.getText() + "'";

            int sohang = tableModelSP.getRowCount() - 1;
            for (int i = sohang; i >= 0; i--) {
                tableModelSP.removeRow(i);
            }

            ResultSet rs = stmt.executeQuery(sql);
            int d = 0;
            while (rs.next()) {
                String[] rows = new String[6];
                rows[0] = rs.getString(1);
                rows[1] = rs.getString(2);
                rows[2] = rs.getString(3);
                rows[3] = rs.getString(4);
                rows[4] = rs.getString(5);
                rows[5] = rs.getString(6);
                tableModelSP.addRow(rows);
                d = 1;
            }
            if (d == 0) {
                JOptionPane.showMessageDialog(rootPane, "Khong co san pham nay trong kho !!!");
                txtMaSP.setText(null);
            }
            con.close();
            stmt.close();
            rs.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTimSPActionPerformed

    private void btnNhapSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapSPActionPerformed
        // TODO add your handling code here:
        if (txtMaSP.getText().equals("") || txtDonGia.getText().equals("") || txtTenSP.getText().equals("") || txtLoai.getText().equals("") || txtXuatXu.getText().equals("") || txtSL.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Bạn không được để trống thông tin sản phẩm , mã hđ , mã giao dịch!!");
            return ;
        }
        Connection con = null;
        Statement stmt = null;
        String maSP = txtMaSP.getText();
        String tenSP = txtTenSP.getText();
        String Loai = txtLoai.getText();
        String xuatXu = txtXuatXu.getText();
        int soLuong = Integer.parseInt(txtSL.getText());
        int donGia = Integer.parseInt(txtDonGia.getText());
        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();

            String sqlMaSP = "select * from sanpham where MaSP='" + maSP + "'";
            ResultSet rs1 = stmt.executeQuery(sqlMaSP);

            int d = 0;
            int soLuongTruoc = 0;
            while (rs1.next()) {
                String[] rows = new String[6];
                rows[0] = rs1.getString(1);
                rows[1] = rs1.getString(2);
                rows[2] = rs1.getString(3);
                rows[3] = rs1.getString(4);
                rows[4] = rs1.getString(5);
                rows[5] = rs1.getString(6);
                soLuongTruoc = Integer.parseInt(rows[4]);
                d = 1;
            }
            if (d == 1) {

                int soLuongMoi = soLuong + soLuongTruoc;
                String sqlSuaSP = "update sanpham set SoLuong='" + soLuongMoi + "' where MaSP='" + maSP + "'";
                stmt.executeUpdate(sqlSuaSP);

                // kiem tra hoa don co hay chưa
                String ngayNhap = java.time.LocalDate.now().toString();
                int x = 0;
                String sqlHD = "select MaHD from hoadon where MaHD='" + txtMaHDSP.getText() + "'";
                ResultSet rs1HD = stmt.executeQuery(sqlHD);
                while (rs1HD.next()) {
                    x = 1;
                }
                if (x == 0) {
                    //them vao hoadon

                    String sqlThemHD = "insert into hoadon value('" + txtMaHDSP.getText() + "','" + ngayNhap + "',null ,null ,null ,null ,null);";
                    int numberrows = stmt.executeUpdate(sqlThemHD);

                    if (numberrows == 0) {
                        System.out.println("insertion falsed");
                    } else {
                        System.out.println("insertion succesfully");
                    }
                }
                //them vao chitiethoadon
                String sqlThemChiTietHD = "insert into chitiethd value('" + txtMaHDSP.getText() + "','" + maSP + "','" + tenSP + "','" + soLuong + "','" + donGia + "');";
                int numberrows = stmt.executeUpdate(sqlThemChiTietHD);

                if (numberrows == 0) {
                    System.out.println("insertion falsed");
                } else {
                    System.out.println("insertion succesfully");

                }
                //them vao chitietphieunhap
                String sqlThemPhieuNhap = "insert into chitietphieunhap value('" + txtMaGD.getText() + "','" + maSP + "','" + tenSP + "','" + Loai + "','" + xuatXu + "', '" + soLuong + "', '" + donGia + "', '" + ngayNhap + "');";
                int numberrows2 = stmt.executeUpdate(sqlThemPhieuNhap);

                if (numberrows2 == 0) {
                    System.out.println("insertion falsed");
                } else {
                    System.out.println("insertion succesfully");
                }
                int sohang = tableModelSP.getRowCount() - 1;
                for (int i = sohang; i >= 0; i--) {
                    tableModelSP.removeRow(i);
                }
                int sohangHT = tableModelHangTon.getRowCount() - 1;
                for (int i = sohang; i >= 0; i--) {
                    tableModelHangTon.removeRow(i);
                }
                String selectall = "select * from sanpham";
                ResultSet rs = stmt.executeQuery(selectall);
                while (rs.next()) {
                    String[] rows = new String[6];
                    rows[0] = rs.getString(1);
                    rows[1] = rs.getString(2);
                    rows[2] = rs.getString(3);
                    rows[3] = rs.getString(4);
                    rows[4] = rs.getString(5);
                    rows[5] = rs.getString(6);
                    tableModelSP.addRow(rows);
                    tableModelHangTon.addRow(rows);
                }
                rs.close();
            } else {
                String sqlThemSP = "insert into sanpham value('" + maSP + "','" + tenSP + "','" + Loai + "','" + xuatXu + "','" + soLuong + "','" + donGia + "');";
                int numberrows = stmt.executeUpdate(sqlThemSP);

                if (numberrows == 0) {
                    System.out.println("insertion falsed");
                } else {
                    System.out.println("insertion succesfully");
                }
                int sohang = tableModelSP.getRowCount() - 1;
                for (int i = sohang; i >= 0; i--) {
                    tableModelSP.removeRow(i);
                }
                int sohangHT = tableModelHangTon.getRowCount() - 1;
                for (int i = sohang; i >= 0; i--) {
                    tableModelHangTon.removeRow(i);
                }
                String sql = "select * from sanpham";
                ResultSet rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    String[] rows = new String[6];
                    rows[0] = rs.getString(1);
                    rows[1] = rs.getString(2);
                    rows[2] = rs.getString(3);
                    rows[3] = rs.getString(4);
                    rows[4] = rs.getString(5);
                    rows[5] = rs.getString(6);
                    tableModelSP.addRow(rows);
                    tableModelHangTon.addRow(rows);
                }
            }
            XoaTextfieldSP();
            JOptionPane.showMessageDialog(rootPane, "Nhap hang thanh cong!");

            con.close();
            stmt.close();
            rs1.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnNhapSPActionPerformed

    private void btnBanSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBanSPActionPerformed
        // TODO add your handling code here:
        if (txtMaSP.getText().equals("") || txtDonGia.getText().equals("") || txtTenSP.getText().equals("") || txtLoai.getText().equals("") || txtXuatXu.getText().equals("") || txtSL.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Bạn không được để trống thông tin sản phẩm , mã hđ , mã giao dịch!!");
            return ;
        }
        Connection con = null;
        Statement stmt = null;
        String maSP = txtMaSP.getText();
        String tenSP = txtTenSP.getText();
        String Loai = txtLoai.getText();
        String xuatXu = txtXuatXu.getText();
        int soLuong = Integer.parseInt(txtSL.getText());
        int donGia = Integer.parseInt(txtDonGia.getText());
        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();

            String sqlMaSP = "select * from sanpham where MaSP='" + maSP + "'";
            ResultSet rs1 = stmt.executeQuery(sqlMaSP);

            int d = 0;
            int soLuongTruoc = 0;
            while (rs1.next()) {
                String[] rows = new String[6];
                rows[0] = rs1.getString(1);
                rows[1] = rs1.getString(2);
                rows[2] = rs1.getString(3);
                rows[3] = rs1.getString(4);
                rows[4] = rs1.getString(5);
                rows[5] = rs1.getString(6);
                soLuongTruoc = Integer.parseInt(rows[4]);
                d = 1;
            }
            if (d == 1) {

                if (soLuongTruoc - soLuong < 0) {
                    JOptionPane.showMessageDialog(rootPane, "Số lượng bán không đủ!");
                } else {
                    int soLuongMoi = soLuongTruoc - soLuong;
                    String sqlSuaSP = "update sanpham set SoLuong='" + soLuongMoi + "' where MaSP='" + maSP + "'";
                    stmt.executeUpdate(sqlSuaSP);

                    // kiem tra hoa don co hay chưa
                    String ngayNhap = java.time.LocalDate.now().toString();
                    int x = 0;
                    String sqlHD = "select MaHD from hoadon where MaHD='" + txtMaHDSP.getText() + "'";
                    ResultSet rs1HD = stmt.executeQuery(sqlHD);
                    while (rs1HD.next()) {
                        x = 1;
                    }
                    if (x == 0) {
                        //them vao hoadon

                        String sqlThemHD = "insert into hoadon value('" + txtMaHDSP.getText() + "','" + ngayNhap + "',null ,null ,null ,null ,null);";
                        int numberrows = stmt.executeUpdate(sqlThemHD);

                        if (numberrows == 0) {
                            System.out.println("insertion falsed");
                        } else {
                            System.out.println("insertion succesfully");
                        }
                    }
                    //them vao chitiethoadon
                    String sqlThemChiTietHD = "insert into chitiethd value('" + txtMaHDSP.getText() + "','" + maSP + "','" + tenSP + "','" + soLuong + "','" + donGia + "');";
                    int numberrows = stmt.executeUpdate(sqlThemChiTietHD);

                    if (numberrows == 0) {
                        System.out.println("insertion falsed");
                    } else {
                        System.out.println("insertion succesfully");

                    }
                    //them vao chitietphieuxuat
                    String sqlThemPhieuXuat = "insert into chitietphieuxuat value('" + txtMaGD.getText() + "','" + maSP + "','" + tenSP + "','" + Loai + "','" + xuatXu + "', '" + soLuong + "', '" + donGia + "', '" + ngayNhap + "');";
                    int numberrows2 = stmt.executeUpdate(sqlThemPhieuXuat);

                    if (numberrows2 == 0) {
                        System.out.println("insertion falsed");
                    } else {
                        System.out.println("insertion succesfully");
                    }

                    int sohang = tableModelSP.getRowCount() - 1;
                    for (int i = sohang; i >= 0; i--) {
                        tableModelSP.removeRow(i);
                    }
                    int sohangHT = tableModelHangTon.getRowCount() - 1;
                    for (int i = sohang; i >= 0; i--) {
                        tableModelHangTon.removeRow(i);
                    }
                    String selectall = "select * from sanpham";
                    ResultSet rs = stmt.executeQuery(selectall);
                    while (rs.next()) {
                        String[] rows = new String[6];
                        rows[0] = rs.getString(1);
                        rows[1] = rs.getString(2);
                        rows[2] = rs.getString(3);
                        rows[3] = rs.getString(4);
                        rows[4] = rs.getString(5);
                        rows[5] = rs.getString(6);
                        tableModelSP.addRow(rows);
                        tableModelHangTon.addRow(rows);
                    }
                    rs.close();
                }
                JOptionPane.showMessageDialog(rootPane, "Ban hang thanh cong!");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Sản phẩm không tồn tại!");
            }
            XoaTextfieldSP();

            con.close();
            stmt.close();
            rs1.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBanSPActionPerformed

    //==================Quản Lý Hàng Tồn=================
    private void btnHienThiHangTonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHienThiHangTonActionPerformed
        // TODO add your handling code here:
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName("com.mysql.jdbc.Driver");
            System.out.println("da ket noi den CSDL");
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            System.out.println("tao cau lenh truy van sql...");
            stmt = con.createStatement();
            String sql = "select*from sanpham";

            int sohang = tableModelHangTon.getRowCount() - 1;
            for (int i = sohang; i >= 0; i--) {
                tableModelHangTon.removeRow(i);
            }

            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
                String[] rows = new String[6];
                rows[0] = rs.getString(1);
                rows[1] = rs.getString(2);
                rows[2] = rs.getString(3);
                rows[3] = rs.getString(4);
                rows[4] = rs.getString(5);
                rows[5] = rs.getString(6);
                tableModelHangTon.addRow(rows);
            }

            con.close();
            stmt.close();
            rs.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnHienThiHangTonActionPerformed

    private void btnKiemTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKiemTraActionPerformed
        // TODO add your handling code here:
        if (txtMaSP_HangTon.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập mã hàng");
            return ;
        }
        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName(JDBC_DRIVER);
            con = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = con.createStatement();

            String sql = "select * from sanpham where MaSP='" + txtMaSP_HangTon.getText() + "'";

            int sohang = tableModelHangTon.getRowCount() - 1;
            for (int i = sohang; i >= 0; i--) {
                tableModelHangTon.removeRow(i);
            }

            ResultSet rs = stmt.executeQuery(sql);
            int d = 0;
            while (rs.next()) {
                String[] rows = new String[6];
                rows[0] = rs.getString(1);
                rows[1] = rs.getString(2);
                rows[2] = rs.getString(3);
                rows[3] = rs.getString(4);
                rows[4] = rs.getString(5);
                rows[5] = rs.getString(6);
                tableModelHangTon.addRow(rows);
                d = 1;
            }
            if (d == 0) {
                JOptionPane.showMessageDialog(rootPane, "Khong co san pham nay trong kho !!!");
                txtMaSP_HangTon.setText(null);
            }
            con.close();
            stmt.close();
            rs.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDienChinh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnKiemTraActionPerformed

    private void jtbSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbSanPhamMouseClicked
        // TODO add your handling code here:
        int row = jtbSanPham.getSelectedRow();
        String maSP = (String) jtbSanPham.getValueAt(row, 0);
        String tenSP = (String) jtbSanPham.getValueAt(row, 1);
        String Loai = (String) jtbSanPham.getValueAt(row, 2);
        String xuatXu = (String) jtbSanPham.getValueAt(row, 3);
        String soLuong = (String) jtbSanPham.getValueAt(row, 4);
        String donGia = (String) jtbSanPham.getValueAt(row, 5);

        txtMaSP.setText(maSP);
        txtTenSP.setText(tenSP);
        txtLoai.setText(Loai);
        txtXuatXu.setText(xuatXu);
        txtSL.setText(soLuong);
        txtDonGia.setText(donGia);
    }//GEN-LAST:event_jtbSanPhamMouseClicked

    private void jtbHangTonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbHangTonMouseClicked
        // TODO add your handling code here:
        int row = jtbHangTon.getSelectedRow();
        String maSP = (String) jtbHangTon.getValueAt(row, 0);

        txtMaSP_HangTon.setText(maSP);
    }//GEN-LAST:event_jtbHangTonMouseClicked

    public static void inHoaDon(String maHD) {
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/nhom17",
                    "root", "123456");
        } catch (ClassNotFoundException | SQLException ex) {
            //JOptionPane.showMessageDialog(rootPane, "Kết nối in hóa đơn lỗi !!!");
        }
//        try {
//            JasperReport report = JasperCompileManager.compileReport("src/nhom17_btl_java/inhoadon.jrxml");
//
//            Hashtable map = new Hashtable();
//            map.put("mahd", maHD);
//            JasperPrint p = JasperFillManager.fillReport(report, map, con);
//            JasperViewer.viewReport(p, false);
//        } catch (JRException ex) {
//            Logger.getLogger(Run.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }


    private void btninhdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninhdActionPerformed

        String mahd = txtmahd.getText();

        System.out.println(mahd);
        if (txtmahd.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "bạn cần phải nhập mã hóa đươn để in!!!");
            return;
        }
        inHoaDon(mahd);

    }//GEN-LAST:event_btninhdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GiaoDienChinh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GiaoDienChinh().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBanSP;
    private javax.swing.JButton btnHienThiHangTon;
    private javax.swing.JButton btnKiemTra;
    private javax.swing.JButton btnNhapSP;
    private javax.swing.JButton btnSuaSP;
    private javax.swing.JButton btnTKtheongay;
    private javax.swing.JButton btnThemSP;
    private javax.swing.JButton btnTimSP;
    private javax.swing.JButton btnXoaSP;
    private javax.swing.JButton btndangxuat;
    private javax.swing.JButton btnhienthi;
    private javax.swing.JButton btnhienthiN;
    private javax.swing.JButton btnhienthiphieuchi;
    private javax.swing.JButton btnhienthiphieuthu;
    private javax.swing.JButton btninhd;
    private javax.swing.JButton btnsuaN;
    private javax.swing.JButton btnsuahd;
    private javax.swing.JButton btnsuasp;
    private javax.swing.JButton btnthemN;
    private javax.swing.JButton btnthemhd;
    private javax.swing.JButton btntimhd;
    private javax.swing.JButton btntimkiemN;
    private javax.swing.JButton btntimkiemphieuchi;
    private javax.swing.JButton btntimkiemphieuthu;
    private javax.swing.JButton btnxoahd;
    private javax.swing.JButton btnxoasp;
    private javax.swing.ButtonGroup buttonGroupphieuchi;
    private javax.swing.ButtonGroup buttonGroupphieuthu;
    private javax.swing.JComboBox combotimN;
    private javax.swing.ButtonGroup groupgioitinh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTable jtbHangTon;
    private javax.swing.JTable jtbSanPham;
    private javax.swing.JLabel lbdoanhthuN;
    private javax.swing.JLabel lbnhanvien;
    private javax.swing.JLabel lbtongchi;
    private javax.swing.JLabel lbtonghoadonN;
    private javax.swing.JLabel lbtongsokhachN;
    private javax.swing.JLabel lbtongthu;
    private javax.swing.JLabel lbtongtien;
    private javax.swing.JRadioButton radionamN;
    private javax.swing.JRadioButton radionuN;
    private javax.swing.JRadioButton rbmaspchi;
    private javax.swing.JRadioButton rbmaspthu;
    private javax.swing.JRadioButton rbngaynhapchi;
    private javax.swing.JRadioButton rbngayxuatthu;
    private javax.swing.JRadioButton rbsopnchi;
    private javax.swing.JRadioButton rbsopxthu;
    private javax.swing.JTable tbcthd;
    private javax.swing.JTable tbdoanhthu;
    private javax.swing.JTable tbhoadon;
    private javax.swing.JTable tbkhachhang;
    private javax.swing.JTable tbphieuchi;
    private javax.swing.JTable tbphieuthu;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtLoai;
    private javax.swing.JTextField txtMaGD;
    private javax.swing.JTextField txtMaHDSP;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtMaSP_HangTon;
    private javax.swing.JTextField txtSL;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtXuatXu;
    private javax.swing.JTextField txtdenngay;
    private javax.swing.JTextField txtdenngaynhapchi;
    private javax.swing.JTextField txtdenngayxuatthu;
    private javax.swing.JTextField txtdiachiN;
    private javax.swing.JTextField txtdongia;
    private javax.swing.JTextField txtghichu;
    private javax.swing.JTextField txtghichuN;
    private javax.swing.JTextField txthotenN;
    private javax.swing.JTextField txtmahd;
    private javax.swing.JTextField txtmahdct;
    private javax.swing.JTextField txtmakh;
    private javax.swing.JTextField txtmakhN;
    private javax.swing.JTextField txtmanv;
    private javax.swing.JTextField txtmasp;
    private javax.swing.JTextField txtmaspchi;
    private javax.swing.JTextField txtmaspthu;
    private javax.swing.JTextField txtngaylap;
    private javax.swing.JTextField txtngaysinhN;
    private javax.swing.JTextField txtsdtN;
    private javax.swing.JTextField txtsoluong;
    private javax.swing.JTextField txtsopnchi;
    private javax.swing.JTextField txtsopxthu;
    private javax.swing.JTextField txttenkh;
    private javax.swing.JTextField txttennv;
    private javax.swing.JTextField txttensp;
    private javax.swing.JTextField txttimkiemN;
    private javax.swing.JTextField txttungay;
    private javax.swing.JTextField txttungaynhapchi;
    private javax.swing.JTextField txttungayxuatthu;
    // End of variables declaration//GEN-END:variables
}
